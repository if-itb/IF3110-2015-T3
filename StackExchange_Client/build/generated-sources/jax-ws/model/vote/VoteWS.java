
package model.vote;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "VoteWS", targetNamespace = "http://vote.model/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface VoteWS {


    /**
     * 
     * @param answerId
     * @param userId
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hasVotedAnswer", targetNamespace = "http://vote.model/", className = "model.vote.HasVotedAnswer")
    @ResponseWrapper(localName = "hasVotedAnswerResponse", targetNamespace = "http://vote.model/", className = "model.vote.HasVotedAnswerResponse")
    @Action(input = "http://vote.model/VoteWS/hasVotedAnswerRequest", output = "http://vote.model/VoteWS/hasVotedAnswerResponse")
    public boolean hasVotedAnswer(
        @WebParam(name = "answer_id", targetNamespace = "")
        int answerId,
        @WebParam(name = "user_id", targetNamespace = "")
        int userId);

    /**
     * 
     * @param questionId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getQuestionVotes", targetNamespace = "http://vote.model/", className = "model.vote.GetQuestionVotes")
    @ResponseWrapper(localName = "getQuestionVotesResponse", targetNamespace = "http://vote.model/", className = "model.vote.GetQuestionVotesResponse")
    @Action(input = "http://vote.model/VoteWS/getQuestionVotesRequest", output = "http://vote.model/VoteWS/getQuestionVotesResponse")
    public int getQuestionVotes(
        @WebParam(name = "question_id", targetNamespace = "")
        int questionId);

    /**
     * 
     * @param answerId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAnswerVotes", targetNamespace = "http://vote.model/", className = "model.vote.GetAnswerVotes")
    @ResponseWrapper(localName = "getAnswerVotesResponse", targetNamespace = "http://vote.model/", className = "model.vote.GetAnswerVotesResponse")
    @Action(input = "http://vote.model/VoteWS/getAnswerVotesRequest", output = "http://vote.model/VoteWS/getAnswerVotesResponse")
    public int getAnswerVotes(
        @WebParam(name = "answer_id", targetNamespace = "")
        int answerId);

    /**
     * 
     * @param answerId
     * @param vote
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "Integer", targetNamespace = "")
    @RequestWrapper(localName = "voteAnswer", targetNamespace = "http://vote.model/", className = "model.vote.VoteAnswer")
    @ResponseWrapper(localName = "voteAnswerResponse", targetNamespace = "http://vote.model/", className = "model.vote.VoteAnswerResponse")
    @Action(input = "http://vote.model/VoteWS/voteAnswerRequest", output = "http://vote.model/VoteWS/voteAnswerResponse")
    public int voteAnswer(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "answer_id", targetNamespace = "")
        int answerId,
        @WebParam(name = "vote", targetNamespace = "")
        int vote);

    /**
     * 
     * @param questionId
     * @param userId
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hasVotedQuestion", targetNamespace = "http://vote.model/", className = "model.vote.HasVotedQuestion")
    @ResponseWrapper(localName = "hasVotedQuestionResponse", targetNamespace = "http://vote.model/", className = "model.vote.HasVotedQuestionResponse")
    @Action(input = "http://vote.model/VoteWS/hasVotedQuestionRequest", output = "http://vote.model/VoteWS/hasVotedQuestionResponse")
    public boolean hasVotedQuestion(
        @WebParam(name = "question_id", targetNamespace = "")
        int questionId,
        @WebParam(name = "user_id", targetNamespace = "")
        int userId);

    /**
     * 
     * @param questionId
     * @param vote
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "Integer", targetNamespace = "")
    @RequestWrapper(localName = "voteQuestion", targetNamespace = "http://vote.model/", className = "model.vote.VoteQuestion")
    @ResponseWrapper(localName = "voteQuestionResponse", targetNamespace = "http://vote.model/", className = "model.vote.VoteQuestionResponse")
    @Action(input = "http://vote.model/VoteWS/voteQuestionRequest", output = "http://vote.model/VoteWS/voteQuestionResponse")
    public int voteQuestion(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "question_id", targetNamespace = "")
        int questionId,
        @WebParam(name = "vote", targetNamespace = "")
        int vote);

}
