
package questionmodel;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "QuestionWS", targetNamespace = "http://QuestionModel/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface QuestionWS {


    /**
     * 
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getName", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetName")
    @ResponseWrapper(localName = "getNameResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetNameResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getNameRequest", output = "http://QuestionModel/QuestionWS/getNameResponse")
    public String getName(
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param search
     * @return
     *     returns java.util.List<questionmodel.Question>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getQuestionSearch", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetQuestionSearch")
    @ResponseWrapper(localName = "getQuestionSearchResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetQuestionSearchResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getQuestionSearchRequest", output = "http://QuestionModel/QuestionWS/getQuestionSearchResponse")
    public List<Question> getQuestionSearch(
        @WebParam(name = "search", targetNamespace = "")
        String search);

    /**
     * 
     * @param topic
     * @param content
     * @param token
     * @return
     *     returns int
     */
    @WebMethod(operationName = "InsertQuestion")
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "InsertQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.InsertQuestion")
    @ResponseWrapper(localName = "InsertQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.InsertQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/InsertQuestionRequest", output = "http://QuestionModel/QuestionWS/InsertQuestionResponse")
    public int insertQuestion(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "content", targetNamespace = "")
        String content);

    /**
     * 
     * @param topic
     * @param id
     * @param content
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.UpdateQuestion")
    @ResponseWrapper(localName = "updateQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.UpdateQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/updateQuestionRequest", output = "http://QuestionModel/QuestionWS/updateQuestionResponse")
    public int updateQuestion(
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "content", targetNamespace = "")
        String content,
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @return
     *     returns java.util.List<questionmodel.Question>
     */
    @WebMethod
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "getallQuestions", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetallQuestions")
    @ResponseWrapper(localName = "getallQuestionsResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetallQuestionsResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getallQuestionsRequest", output = "http://QuestionModel/QuestionWS/getallQuestionsResponse")
    public List<Question> getallQuestions();

    /**
     * 
     * @param token
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getExpiredDate", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetExpiredDate")
    @ResponseWrapper(localName = "getExpiredDateResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetExpiredDateResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getExpiredDateRequest", output = "http://QuestionModel/QuestionWS/getExpiredDateResponse")
    public long getExpiredDate(
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param id
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "deleteQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.DeleteQuestion")
    @ResponseWrapper(localName = "deleteQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.DeleteQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/deleteQuestionRequest", output = "http://QuestionModel/QuestionWS/deleteQuestionResponse")
    public int deleteQuestion(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param token
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEmail", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetEmail")
    @ResponseWrapper(localName = "getEmailResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetEmailResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getEmailRequest", output = "http://QuestionModel/QuestionWS/getEmailResponse")
    public String getEmail(
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param id
     * @return
     *     returns java.util.List<questionmodel.Question>
     */
    @WebMethod
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "getQuestionbyID", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetQuestionbyID")
    @ResponseWrapper(localName = "getQuestionbyIDResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetQuestionbyIDResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getQuestionbyIDRequest", output = "http://QuestionModel/QuestionWS/getQuestionbyIDResponse")
    public List<Question> getQuestionbyID(
        @WebParam(name = "id", targetNamespace = "")
        int id);

}
