
package question;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Question_WS", targetNamespace = "http://webservice/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface QuestionWS {


    /**
     * 
     * @param question
     * @param token
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createQuestion", targetNamespace = "http://webservice/", className = "question.CreateQuestion")
    @ResponseWrapper(localName = "createQuestionResponse", targetNamespace = "http://webservice/", className = "question.CreateQuestionResponse")
    @Action(input = "http://webservice/Question_WS/createQuestionRequest", output = "http://webservice/Question_WS/createQuestionResponse")
    public Integer createQuestion(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "question", targetNamespace = "")
        Question question);

    /**
     * 
     * @param qid
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVotesQuestion", targetNamespace = "http://webservice/", className = "question.GetVotesQuestion")
    @ResponseWrapper(localName = "getVotesQuestionResponse", targetNamespace = "http://webservice/", className = "question.GetVotesQuestionResponse")
    @Action(input = "http://webservice/Question_WS/getVotesQuestionRequest", output = "http://webservice/Question_WS/getVotesQuestionResponse")
    public Integer getVotesQuestion(
        @WebParam(name = "qid", targetNamespace = "")
        int qid);

    /**
     * 
     * @param qid
     * @param value
     * @param token
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "voteQuestion", targetNamespace = "http://webservice/", className = "question.VoteQuestion")
    @ResponseWrapper(localName = "voteQuestionResponse", targetNamespace = "http://webservice/", className = "question.VoteQuestionResponse")
    @Action(input = "http://webservice/Question_WS/voteQuestionRequest", output = "http://webservice/Question_WS/voteQuestionResponse")
    public Integer voteQuestion(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "qid", targetNamespace = "")
        int qid,
        @WebParam(name = "value", targetNamespace = "")
        String value);

    /**
     * 
     * @param keyword
     * @return
     *     returns java.util.List<question.Question>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchQuestion", targetNamespace = "http://webservice/", className = "question.SearchQuestion")
    @ResponseWrapper(localName = "searchQuestionResponse", targetNamespace = "http://webservice/", className = "question.SearchQuestionResponse")
    @Action(input = "http://webservice/Question_WS/searchQuestionRequest", output = "http://webservice/Question_WS/searchQuestionResponse")
    public List<Question> searchQuestion(
        @WebParam(name = "keyword", targetNamespace = "")
        String keyword);

    /**
     * 
     * @param qid
     * @param token
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteQuestion", targetNamespace = "http://webservice/", className = "question.DeleteQuestion")
    @ResponseWrapper(localName = "deleteQuestionResponse", targetNamespace = "http://webservice/", className = "question.DeleteQuestionResponse")
    @Action(input = "http://webservice/Question_WS/deleteQuestionRequest", output = "http://webservice/Question_WS/deleteQuestionResponse")
    public Integer deleteQuestion(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "qid", targetNamespace = "")
        int qid);

    /**
     * 
     * @param qid
     * @return
     *     returns question.Question
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getQuestion", targetNamespace = "http://webservice/", className = "question.GetQuestion")
    @ResponseWrapper(localName = "getQuestionResponse", targetNamespace = "http://webservice/", className = "question.GetQuestionResponse")
    @Action(input = "http://webservice/Question_WS/getQuestionRequest", output = "http://webservice/Question_WS/getQuestionResponse")
    public Question getQuestion(
        @WebParam(name = "qid", targetNamespace = "")
        int qid);

    /**
     * 
     * @param uid
     * @param qid
     * @param status
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hasVotedQuestion", targetNamespace = "http://webservice/", className = "question.HasVotedQuestion")
    @ResponseWrapper(localName = "hasVotedQuestionResponse", targetNamespace = "http://webservice/", className = "question.HasVotedQuestionResponse")
    @Action(input = "http://webservice/Question_WS/hasVotedQuestionRequest", output = "http://webservice/Question_WS/hasVotedQuestionResponse")
    public Boolean hasVotedQuestion(
        @WebParam(name = "qid", targetNamespace = "")
        int qid,
        @WebParam(name = "uid", targetNamespace = "")
        int uid,
        @WebParam(name = "status", targetNamespace = "")
        int status);

    /**
     * 
     * @param topic
     * @param qid
     * @param content
     * @param token
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateQuestion", targetNamespace = "http://webservice/", className = "question.UpdateQuestion")
    @ResponseWrapper(localName = "updateQuestionResponse", targetNamespace = "http://webservice/", className = "question.UpdateQuestionResponse")
    @Action(input = "http://webservice/Question_WS/updateQuestionRequest", output = "http://webservice/Question_WS/updateQuestionResponse")
    public Integer updateQuestion(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "qid", targetNamespace = "")
        int qid,
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "content", targetNamespace = "")
        String content);

    /**
     * 
     * @return
     *     returns java.util.List<question.Question>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listQuestion", targetNamespace = "http://webservice/", className = "question.ListQuestion")
    @ResponseWrapper(localName = "listQuestionResponse", targetNamespace = "http://webservice/", className = "question.ListQuestionResponse")
    @Action(input = "http://webservice/Question_WS/listQuestionRequest", output = "http://webservice/Question_WS/listQuestionResponse")
    public List<Question> listQuestion();

    /**
     * 
     * @param qid
     * @param token
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteAllVoteQuestion", targetNamespace = "http://webservice/", className = "question.DeleteAllVoteQuestion")
    @ResponseWrapper(localName = "deleteAllVoteQuestionResponse", targetNamespace = "http://webservice/", className = "question.DeleteAllVoteQuestionResponse")
    @Action(input = "http://webservice/Question_WS/deleteAllVoteQuestionRequest", output = "http://webservice/Question_WS/deleteAllVoteQuestionResponse")
    public Boolean deleteAllVoteQuestion(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "qid", targetNamespace = "")
        int qid);

}
