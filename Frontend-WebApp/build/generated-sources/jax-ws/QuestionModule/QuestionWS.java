
package QuestionModule;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "QuestionWS", targetNamespace = "http://QuestionModule/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface QuestionWS {


    /**
     * 
     * @param qid
     * @return
     *     returns QuestionModule.Question
     */
    @WebMethod(operationName = "GetQuestionByID")
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "GetQuestionByID", targetNamespace = "http://QuestionModule/", className = "QuestionModule.GetQuestionByID")
    @ResponseWrapper(localName = "GetQuestionByIDResponse", targetNamespace = "http://QuestionModule/", className = "QuestionModule.GetQuestionByIDResponse")
    @Action(input = "http://QuestionModule/QuestionWS/GetQuestionByIDRequest", output = "http://QuestionModule/QuestionWS/GetQuestionByIDResponse")
    public Question getQuestionByID(
        @WebParam(name = "qid", targetNamespace = "")
        int qid);

    /**
     * 
     * @param userIp
     * @param topic
     * @param userAgent
     * @param accessToken
     * @param content
     * @return
     *     returns int
     */
    @WebMethod(operationName = "InsertQuestion")
    @WebResult(name = "Status", targetNamespace = "")
    @RequestWrapper(localName = "InsertQuestion", targetNamespace = "http://QuestionModule/", className = "QuestionModule.InsertQuestion")
    @ResponseWrapper(localName = "InsertQuestionResponse", targetNamespace = "http://QuestionModule/", className = "QuestionModule.InsertQuestionResponse")
    @Action(input = "http://QuestionModule/QuestionWS/InsertQuestionRequest", output = "http://QuestionModule/QuestionWS/InsertQuestionResponse")
    public int insertQuestion(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "user_agent", targetNamespace = "")
        String userAgent,
        @WebParam(name = "user_ip", targetNamespace = "")
        String userIp,
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "content", targetNamespace = "")
        String content);

    /**
     * 
     * @param userIp
     * @param topic
     * @param userAgent
     * @param accessToken
     * @param qid
     * @param content
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "UpdateQuestion")
    @WebResult(name = "Status", targetNamespace = "")
    @RequestWrapper(localName = "UpdateQuestion", targetNamespace = "http://QuestionModule/", className = "QuestionModule.UpdateQuestion")
    @ResponseWrapper(localName = "UpdateQuestionResponse", targetNamespace = "http://QuestionModule/", className = "QuestionModule.UpdateQuestionResponse")
    @Action(input = "http://QuestionModule/QuestionWS/UpdateQuestionRequest", output = "http://QuestionModule/QuestionWS/UpdateQuestionResponse")
    public String updateQuestion(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "user_agent", targetNamespace = "")
        String userAgent,
        @WebParam(name = "user_ip", targetNamespace = "")
        String userIp,
        @WebParam(name = "qid", targetNamespace = "")
        int qid,
        @WebParam(name = "content", targetNamespace = "")
        String content,
        @WebParam(name = "topic", targetNamespace = "")
        String topic);

    /**
     * 
     * @return
     *     returns java.util.List<QuestionModule.Question>
     */
    @WebMethod(operationName = "GetAllQuestion")
    @WebResult(name = "Questions", targetNamespace = "")
    @RequestWrapper(localName = "GetAllQuestion", targetNamespace = "http://QuestionModule/", className = "QuestionModule.GetAllQuestion")
    @ResponseWrapper(localName = "GetAllQuestionResponse", targetNamespace = "http://QuestionModule/", className = "QuestionModule.GetAllQuestionResponse")
    @Action(input = "http://QuestionModule/QuestionWS/GetAllQuestionRequest", output = "http://QuestionModule/QuestionWS/GetAllQuestionResponse")
    public List<Question> getAllQuestion();

    /**
     * 
     * @param userIp
     * @param userAgent
     * @param accessToken
     * @param qid
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "DeleteQuestion")
    @WebResult(name = "Status", targetNamespace = "")
    @RequestWrapper(localName = "DeleteQuestion", targetNamespace = "http://QuestionModule/", className = "QuestionModule.DeleteQuestion")
    @ResponseWrapper(localName = "DeleteQuestionResponse", targetNamespace = "http://QuestionModule/", className = "QuestionModule.DeleteQuestionResponse")
    @Action(input = "http://QuestionModule/QuestionWS/DeleteQuestionRequest", output = "http://QuestionModule/QuestionWS/DeleteQuestionResponse")
    public String deleteQuestion(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "user_agent", targetNamespace = "")
        String userAgent,
        @WebParam(name = "user_ip", targetNamespace = "")
        String userIp,
        @WebParam(name = "qid", targetNamespace = "")
        int qid);

    /**
     * 
     * @param userIp
     * @param userAgent
     * @param up
     * @param accessToken
     * @param qid
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "Status", targetNamespace = "")
    @RequestWrapper(localName = "voteQuestion", targetNamespace = "http://QuestionModule/", className = "QuestionModule.VoteQuestion")
    @ResponseWrapper(localName = "voteQuestionResponse", targetNamespace = "http://QuestionModule/", className = "QuestionModule.VoteQuestionResponse")
    @Action(input = "http://QuestionModule/QuestionWS/voteQuestionRequest", output = "http://QuestionModule/QuestionWS/voteQuestionResponse")
    public String voteQuestion(
        @WebParam(name = "qid", targetNamespace = "")
        int qid,
        @WebParam(name = "up", targetNamespace = "")
        boolean up,
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "user_agent", targetNamespace = "")
        String userAgent,
        @WebParam(name = "user_ip", targetNamespace = "")
        String userIp);

}
