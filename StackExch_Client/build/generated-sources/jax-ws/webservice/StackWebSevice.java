
package webservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StackWebSevice", targetNamespace = "http://WebService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StackWebSevice {


    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://WebService/", className = "webservice.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://WebService/", className = "webservice.RegisterResponse")
    @Action(input = "http://WebService/StackWebSevice/registerRequest", output = "http://WebService/StackWebSevice/registerResponse")
    public int register(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteToken", targetNamespace = "http://WebService/", className = "webservice.DeleteToken")
    @ResponseWrapper(localName = "deleteTokenResponse", targetNamespace = "http://WebService/", className = "webservice.DeleteTokenResponse")
    @Action(input = "http://WebService/StackWebSevice/deleteTokenRequest", output = "http://WebService/StackWebSevice/deleteTokenResponse")
    public int deleteToken(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTokenOwner", targetNamespace = "http://WebService/", className = "webservice.GetTokenOwner")
    @ResponseWrapper(localName = "getTokenOwnerResponse", targetNamespace = "http://WebService/", className = "webservice.GetTokenOwnerResponse")
    @Action(input = "http://WebService/StackWebSevice/getTokenOwnerRequest", output = "http://WebService/StackWebSevice/getTokenOwnerResponse")
    public String getTokenOwner(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "statusToken", targetNamespace = "http://WebService/", className = "webservice.StatusToken")
    @ResponseWrapper(localName = "statusTokenResponse", targetNamespace = "http://WebService/", className = "webservice.StatusTokenResponse")
    @Action(input = "http://WebService/StackWebSevice/statusTokenRequest", output = "http://WebService/StackWebSevice/statusTokenResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://WebService/StackWebSevice/statusToken/Fault/ParseException")
    })
    public int statusToken(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addAnswer", targetNamespace = "http://WebService/", className = "webservice.AddAnswer")
    @ResponseWrapper(localName = "addAnswerResponse", targetNamespace = "http://WebService/", className = "webservice.AddAnswerResponse")
    @Action(input = "http://WebService/StackWebSevice/addAnswerRequest", output = "http://WebService/StackWebSevice/addAnswerResponse")
    public int addAnswer(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteQuestion", targetNamespace = "http://WebService/", className = "webservice.DeleteQuestion")
    @ResponseWrapper(localName = "deleteQuestionResponse", targetNamespace = "http://WebService/", className = "webservice.DeleteQuestionResponse")
    @Action(input = "http://WebService/StackWebSevice/deleteQuestionRequest", output = "http://WebService/StackWebSevice/deleteQuestionResponse")
    public int deleteQuestion(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addQuestion", targetNamespace = "http://WebService/", className = "webservice.AddQuestion")
    @ResponseWrapper(localName = "addQuestionResponse", targetNamespace = "http://WebService/", className = "webservice.AddQuestionResponse")
    @Action(input = "http://WebService/StackWebSevice/addQuestionRequest", output = "http://WebService/StackWebSevice/addQuestionResponse")
    public int addQuestion(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4);

    /**
     * 
     * @param qid
     * @return
     *     returns webservice.Question
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getQuestions", targetNamespace = "http://WebService/", className = "webservice.GetQuestions")
    @ResponseWrapper(localName = "getQuestionsResponse", targetNamespace = "http://WebService/", className = "webservice.GetQuestionsResponse")
    @Action(input = "http://WebService/StackWebSevice/getQuestionsRequest", output = "http://WebService/StackWebSevice/getQuestionsResponse")
    public Question getQuestions(
        @WebParam(name = "qid", targetNamespace = "")
        int qid);

    /**
     * 
     * @param qid
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countAnswer", targetNamespace = "http://WebService/", className = "webservice.CountAnswer")
    @ResponseWrapper(localName = "countAnswerResponse", targetNamespace = "http://WebService/", className = "webservice.CountAnswerResponse")
    @Action(input = "http://WebService/StackWebSevice/countAnswerRequest", output = "http://WebService/StackWebSevice/countAnswerResponse")
    public int countAnswer(
        @WebParam(name = "qid", targetNamespace = "")
        int qid);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://WebService/", className = "webservice.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://WebService/", className = "webservice.HelloResponse")
    @Action(input = "http://WebService/StackWebSevice/helloRequest", output = "http://WebService/StackWebSevice/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param idA
     * @return
     *     returns java.util.List<webservice.Answer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllAnswers", targetNamespace = "http://WebService/", className = "webservice.GetAllAnswers")
    @ResponseWrapper(localName = "getAllAnswersResponse", targetNamespace = "http://WebService/", className = "webservice.GetAllAnswersResponse")
    @Action(input = "http://WebService/StackWebSevice/getAllAnswersRequest", output = "http://WebService/StackWebSevice/getAllAnswersResponse")
    public List<Answer> getAllAnswers(
        @WebParam(name = "id_a", targetNamespace = "")
        int idA);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<webservice.Question>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchQuestion", targetNamespace = "http://WebService/", className = "webservice.SearchQuestion")
    @ResponseWrapper(localName = "searchQuestionResponse", targetNamespace = "http://WebService/", className = "webservice.SearchQuestionResponse")
    @Action(input = "http://WebService/StackWebSevice/searchQuestionRequest", output = "http://WebService/StackWebSevice/searchQuestionResponse")
    public List<Question> searchQuestion(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVote", targetNamespace = "http://WebService/", className = "webservice.GetVote")
    @ResponseWrapper(localName = "getVoteResponse", targetNamespace = "http://WebService/", className = "webservice.GetVoteResponse")
    @Action(input = "http://WebService/StackWebSevice/getVoteRequest", output = "http://WebService/StackWebSevice/getVoteResponse")
    public int getVote(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @return
     *     returns java.util.List<webservice.Question>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllQuestions", targetNamespace = "http://WebService/", className = "webservice.GetAllQuestions")
    @ResponseWrapper(localName = "getAllQuestionsResponse", targetNamespace = "http://WebService/", className = "webservice.GetAllQuestionsResponse")
    @Action(input = "http://WebService/StackWebSevice/getAllQuestionsRequest", output = "http://WebService/StackWebSevice/getAllQuestionsResponse")
    public List<Question> getAllQuestions();

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "changeVote", targetNamespace = "http://WebService/", className = "webservice.ChangeVote")
    @ResponseWrapper(localName = "changeVoteResponse", targetNamespace = "http://WebService/", className = "webservice.ChangeVoteResponse")
    @Action(input = "http://WebService/StackWebSevice/changeVoteRequest", output = "http://WebService/StackWebSevice/changeVoteResponse")
    public int changeVote(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateQuestion", targetNamespace = "http://WebService/", className = "webservice.UpdateQuestion")
    @ResponseWrapper(localName = "updateQuestionResponse", targetNamespace = "http://WebService/", className = "webservice.UpdateQuestionResponse")
    @Action(input = "http://WebService/StackWebSevice/updateQuestionRequest", output = "http://WebService/StackWebSevice/updateQuestionResponse")
    public int updateQuestion(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5);

    /**
     * 
     * @param idA
     * @return
     *     returns java.util.List<webservice.Comment>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllComment", targetNamespace = "http://WebService/", className = "webservice.GetAllComment")
    @ResponseWrapper(localName = "getAllCommentResponse", targetNamespace = "http://WebService/", className = "webservice.GetAllCommentResponse")
    @Action(input = "http://WebService/StackWebSevice/getAllCommentRequest", output = "http://WebService/StackWebSevice/getAllCommentResponse")
    public List<Comment> getAllComment(
        @WebParam(name = "id_a", targetNamespace = "")
        int idA);

}
