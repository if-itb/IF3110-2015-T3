
package stackexchange.webservice;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserWS", targetNamespace = "http://webservice.stackexchange/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserWS {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getToken", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.GetToken")
    @ResponseWrapper(localName = "getTokenResponse", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.GetTokenResponse")
    @Action(input = "http://webservice.stackexchange/UserWS/getTokenRequest", output = "http://webservice.stackexchange/UserWS/getTokenResponse")
    public String getToken();

    /**
     * 
     * @param email
     * @param token
     * @return
     *     returns stackexchange.webservice.User
     */
    @WebMethod
    @WebResult(name = "User", targetNamespace = "")
    @RequestWrapper(localName = "getUser", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.GetUser")
    @ResponseWrapper(localName = "getUserResponse", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.GetUserResponse")
    @Action(input = "http://webservice.stackexchange/UserWS/getUserRequest", output = "http://webservice.stackexchange/UserWS/getUserResponse")
    public User getUser(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param user
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.AddUserResponse")
    @Action(input = "http://webservice.stackexchange/UserWS/addUserRequest", output = "http://webservice.stackexchange/UserWS/addUserResponse")
    public boolean addUser(
        @WebParam(name = "user", targetNamespace = "")
        User user);

    /**
     * 
     * @return
     *     returns java.util.List<stackexchange.webservice.User>
     */
    @WebMethod
    @WebResult(name = "User", targetNamespace = "")
    @RequestWrapper(localName = "getUsers", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.GetUsers")
    @ResponseWrapper(localName = "getUsersResponse", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.GetUsersResponse")
    @Action(input = "http://webservice.stackexchange/UserWS/getUsersRequest", output = "http://webservice.stackexchange/UserWS/getUsersResponse")
    public List<User> getUsers();

    /**
     * 
     * @param email
     * @return
     *     returns stackexchange.webservice.User
     */
    @WebMethod
    @WebResult(name = "User", targetNamespace = "")
    @RequestWrapper(localName = "getUserByEmail", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.GetUserByEmail")
    @ResponseWrapper(localName = "getUserByEmailResponse", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.GetUserByEmailResponse")
    @Action(input = "http://webservice.stackexchange/UserWS/getUserByEmailRequest", output = "http://webservice.stackexchange/UserWS/getUserByEmailResponse")
    public User getUserByEmail(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param email
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "signOut", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.SignOut")
    @ResponseWrapper(localName = "signOutResponse", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.SignOutResponse")
    @Action(input = "http://webservice.stackexchange/UserWS/signOutRequest", output = "http://webservice.stackexchange/UserWS/signOutResponse")
    public boolean signOut(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param id
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.DeleteUser")
    @Action(input = "http://webservice.stackexchange/UserWS/deleteUser")
    public void deleteUser(
        @WebParam(name = "id", targetNamespace = "")
        int id);

}
