
package stackexchange.webservice;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "QuestionWS", targetNamespace = "http://webservice.stackexchange/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface QuestionWS {


    /**
     * 
     * @param id
     * @return
     *     returns java.util.List<stackexchange.webservice.Question>
     */
    @WebMethod(operationName = "getQuestions_1")
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "getQuestions_1", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.GetQuestions1")
    @ResponseWrapper(localName = "getQuestions_1Response", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.GetQuestions1Response")
    @Action(input = "http://webservice.stackexchange/QuestionWS/getQuestions_1Request", output = "http://webservice.stackexchange/QuestionWS/getQuestions_1Response")
    public List<Question> getQuestions1(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<stackexchange.webservice.Question>
     */
    @WebMethod(operationName = "getQuestions_2")
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "getQuestions_2", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.GetQuestions2")
    @ResponseWrapper(localName = "getQuestions_2Response", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.GetQuestions2Response")
    @Action(input = "http://webservice.stackexchange/QuestionWS/getQuestions_2Request", output = "http://webservice.stackexchange/QuestionWS/getQuestions_2Response")
    public List<Question> getQuestions2(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<stackexchange.webservice.Question>
     */
    @WebMethod
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "getQuestions", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.GetQuestions")
    @ResponseWrapper(localName = "getQuestionsResponse", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.GetQuestionsResponse")
    @Action(input = "http://webservice.stackexchange/QuestionWS/getQuestionsRequest", output = "http://webservice.stackexchange/QuestionWS/getQuestionsResponse")
    public List<Question> getQuestions();

    /**
     * 
     * @param question
     * @param token
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addQuestion", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.AddQuestion")
    @Action(input = "http://webservice.stackexchange/QuestionWS/addQuestion")
    public void addQuestion(
        @WebParam(name = "question", targetNamespace = "")
        Question question,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param id
     * @param email
     * @param token
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "deleteQuestion", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.DeleteQuestion")
    @Action(input = "http://webservice.stackexchange/QuestionWS/deleteQuestion")
    public void deleteQuestion(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param id
     * @param inc
     */
    @WebMethod(operationName = "voteQuestion_1")
    @Oneway
    @RequestWrapper(localName = "voteQuestion_1", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.VoteQuestion1")
    @Action(input = "http://webservice.stackexchange/QuestionWS/voteQuestion_1")
    public void voteQuestion1(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "inc", targetNamespace = "")
        boolean inc);

    /**
     * 
     * @param question
     * @param token
     * @param inc
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "voteQuestion", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.VoteQuestion")
    @Action(input = "http://webservice.stackexchange/QuestionWS/voteQuestion")
    public void voteQuestion(
        @WebParam(name = "question", targetNamespace = "")
        Question question,
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "inc", targetNamespace = "")
        boolean inc);

    /**
     * 
     * @param question
     * @param token
     */
    @WebMethod
    @RequestWrapper(localName = "updateQuestion", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.UpdateQuestion")
    @ResponseWrapper(localName = "updateQuestionResponse", targetNamespace = "http://webservice.stackexchange/", className = "stackexchange.webservice.UpdateQuestionResponse")
    @Action(input = "http://webservice.stackexchange/QuestionWS/updateQuestionRequest", output = "http://webservice.stackexchange/QuestionWS/updateQuestionResponse")
    public void updateQuestion(
        @WebParam(name = "question", targetNamespace = "")
        Question question,
        @WebParam(name = "token", targetNamespace = "")
        String token);

}
