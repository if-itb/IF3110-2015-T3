
package QuestionWS;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "QuestionWS", targetNamespace = "http://QuestionModel/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface QuestionWS {


    /**
     * 
     * @param accessToken
     * @param title
     * @param qid
     * @param content
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editQuestion", targetNamespace = "http://QuestionModel/", className = "QuestionWS.EditQuestion")
    @ResponseWrapper(localName = "editQuestionResponse", targetNamespace = "http://QuestionModel/", className = "QuestionWS.EditQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/editQuestionRequest", output = "http://QuestionModel/QuestionWS/editQuestionResponse")
    public String editQuestion(
        @WebParam(name = "qid", targetNamespace = "")
        int qid,
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "title", targetNamespace = "")
        String title,
        @WebParam(name = "content", targetNamespace = "")
        String content);

    /**
     * 
     * @param accessToken
     * @param qid
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteQuestion", targetNamespace = "http://QuestionModel/", className = "QuestionWS.DeleteQuestion")
    @ResponseWrapper(localName = "deleteQuestionResponse", targetNamespace = "http://QuestionModel/", className = "QuestionWS.DeleteQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/deleteQuestionRequest", output = "http://QuestionModel/QuestionWS/deleteQuestionResponse")
    public String deleteQuestion(
        @WebParam(name = "qid", targetNamespace = "")
        int qid,
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken);

    /**
     * 
     * @param qid
     * @return
     *     returns java.util.List<QuestionWS.Question>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getQuestionByQID", targetNamespace = "http://QuestionModel/", className = "QuestionWS.GetQuestionByQID")
    @ResponseWrapper(localName = "getQuestionByQIDResponse", targetNamespace = "http://QuestionModel/", className = "QuestionWS.GetQuestionByQIDResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getQuestionByQIDRequest", output = "http://QuestionModel/QuestionWS/getQuestionByQIDResponse")
    public List<Question> getQuestionByQID(
        @WebParam(name = "qid", targetNamespace = "")
        int qid);

    /**
     * 
     * @return
     *     returns java.util.List<QuestionWS.Question>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllQuestion", targetNamespace = "http://QuestionModel/", className = "QuestionWS.GetAllQuestion")
    @ResponseWrapper(localName = "getAllQuestionResponse", targetNamespace = "http://QuestionModel/", className = "QuestionWS.GetAllQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getAllQuestionRequest", output = "http://QuestionModel/QuestionWS/getAllQuestionResponse")
    public List<Question> getAllQuestion();

    /**
     * 
     * @param voteUp
     * @param accessToken
     * @param qid
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "voteQuestion", targetNamespace = "http://QuestionModel/", className = "QuestionWS.VoteQuestion")
    @ResponseWrapper(localName = "voteQuestionResponse", targetNamespace = "http://QuestionModel/", className = "QuestionWS.VoteQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/voteQuestionRequest", output = "http://QuestionModel/QuestionWS/voteQuestionResponse")
    public String voteQuestion(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "qid", targetNamespace = "")
        int qid,
        @WebParam(name = "voteUp", targetNamespace = "")
        boolean voteUp);

    /**
     * 
     * @param accessToken
     * @param title
     * @param content
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createQuestion", targetNamespace = "http://QuestionModel/", className = "QuestionWS.CreateQuestion")
    @ResponseWrapper(localName = "createQuestionResponse", targetNamespace = "http://QuestionModel/", className = "QuestionWS.CreateQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/createQuestionRequest", output = "http://QuestionModel/QuestionWS/createQuestionResponse")
    public String createQuestion(
        @WebParam(name = "access_token", targetNamespace = "")
        String accessToken,
        @WebParam(name = "title", targetNamespace = "")
        String title,
        @WebParam(name = "content", targetNamespace = "")
        String content);

}
