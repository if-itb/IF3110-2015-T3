
package questionmodel;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "QuestionWS", targetNamespace = "http://QuestionModel/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface QuestionWS {


    /**
     * 
     * @param stat
     * @param userid
     * @param qid
     * @param token
     * @return
     *     returns int
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "voteQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.VoteQuestion")
    @ResponseWrapper(localName = "voteQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.VoteQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/voteQuestionRequest", output = "http://QuestionModel/QuestionWS/voteQuestionResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://QuestionModel/QuestionWS/voteQuestion/Fault/ParseException")
    })
    public int voteQuestion(
        @WebParam(name = "userid", targetNamespace = "")
        int userid,
        @WebParam(name = "qid", targetNamespace = "")
        int qid,
        @WebParam(name = "stat", targetNamespace = "")
        int stat,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param id
     * @return
     *     returns questionmodel.Question
     */
    @WebMethod(operationName = "GetQuestionByID")
    @WebResult(name = "QuestionByID", targetNamespace = "")
    @RequestWrapper(localName = "GetQuestionByID", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetQuestionByID")
    @ResponseWrapper(localName = "GetQuestionByIDResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetQuestionByIDResponse")
    @Action(input = "http://QuestionModel/QuestionWS/GetQuestionByIDRequest", output = "http://QuestionModel/QuestionWS/GetQuestionByIDResponse")
    public Question getQuestionByID(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @return
     *     returns java.util.List<questionmodel.Question>
     */
    @WebMethod(operationName = "GetAllQuestion")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetAllQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetAllQuestion")
    @ResponseWrapper(localName = "GetAllQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.GetAllQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/GetAllQuestionRequest", output = "http://QuestionModel/QuestionWS/GetAllQuestionResponse")
    public List<Question> getAllQuestion();

    /**
     * 
     * @param qid
     * @param token
     * @return
     *     returns int
     * @throws ParseException_Exception
     */
    @WebMethod(operationName = "DeleteQuestion")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "DeleteQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.DeleteQuestion")
    @ResponseWrapper(localName = "DeleteQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.DeleteQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/DeleteQuestionRequest", output = "http://QuestionModel/QuestionWS/DeleteQuestionResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://QuestionModel/QuestionWS/DeleteQuestion/Fault/ParseException")
    })
    public int deleteQuestion(
        @WebParam(name = "qid", targetNamespace = "")
        int qid,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param title
     * @param qid
     * @param content
     * @param token
     * @return
     *     returns int
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.EditQuestion")
    @ResponseWrapper(localName = "editQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.EditQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/editQuestionRequest", output = "http://QuestionModel/QuestionWS/editQuestionResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://QuestionModel/QuestionWS/editQuestion/Fault/ParseException")
    })
    public int editQuestion(
        @WebParam(name = "title", targetNamespace = "")
        String title,
        @WebParam(name = "content", targetNamespace = "")
        String content,
        @WebParam(name = "qid", targetNamespace = "")
        int qid,
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param title
     * @param content
     * @param token
     * @return
     *     returns int
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createQuestion", targetNamespace = "http://QuestionModel/", className = "questionmodel.CreateQuestion")
    @ResponseWrapper(localName = "createQuestionResponse", targetNamespace = "http://QuestionModel/", className = "questionmodel.CreateQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/createQuestionRequest", output = "http://QuestionModel/QuestionWS/createQuestionResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://QuestionModel/QuestionWS/createQuestion/Fault/ParseException")
    })
    public int createQuestion(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "title", targetNamespace = "")
        String title,
        @WebParam(name = "content", targetNamespace = "")
        String content)
        throws ParseException_Exception
    ;

}
