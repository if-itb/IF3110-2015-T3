
package QuestionWS;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.1
 * 
 */
@WebService(name = "QuestionWS", targetNamespace = "http://jaxws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface QuestionWS {


    /**
     * 
     * @param id
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "questionVote", targetNamespace = "")
    @RequestWrapper(localName = "getQuestionVote", targetNamespace = "http://jaxws/", className = "QuestionWS.GetQuestionVote")
    @ResponseWrapper(localName = "getQuestionVoteResponse", targetNamespace = "http://jaxws/", className = "QuestionWS.GetQuestionVoteResponse")
    public int getQuestionVote(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @return
     *     returns java.util.List<QuestionWS.Question>
     */
    @WebMethod
    @WebResult(name = "Questions", targetNamespace = "")
    @RequestWrapper(localName = "getQuestion", targetNamespace = "http://jaxws/", className = "QuestionWS.GetQuestion")
    @ResponseWrapper(localName = "getQuestionResponse", targetNamespace = "http://jaxws/", className = "QuestionWS.GetQuestionResponse")
    public List<Question> getQuestion();

    /**
     * 
     * @param val
     * @param id
     */
    @WebMethod
    @RequestWrapper(localName = "setQuestionVote", targetNamespace = "http://jaxws/", className = "QuestionWS.SetQuestionVote")
    @ResponseWrapper(localName = "setQuestionVoteResponse", targetNamespace = "http://jaxws/", className = "QuestionWS.SetQuestionVoteResponse")
    public void setQuestionVote(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "val", targetNamespace = "")
        int val);

    /**
     * 
     * @param qid
     * @return
     *     returns java.util.List<QuestionWS.Question>
     */
    @WebMethod
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "getQuestionByQID", targetNamespace = "http://jaxws/", className = "QuestionWS.GetQuestionByQID")
    @ResponseWrapper(localName = "getQuestionByQIDResponse", targetNamespace = "http://jaxws/", className = "QuestionWS.GetQuestionByQIDResponse")
    public List<Question> getQuestionByQID(
        @WebParam(name = "qid", targetNamespace = "")
        int qid);

    /**
     * 
     * @param uid
     * @param arg1
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "numVoteQuestion", targetNamespace = "")
    @RequestWrapper(localName = "numVoteQuestion", targetNamespace = "http://jaxws/", className = "QuestionWS.NumVoteQuestion")
    @ResponseWrapper(localName = "numVoteQuestionResponse", targetNamespace = "http://jaxws/", className = "QuestionWS.NumVoteQuestionResponse")
    public int numVoteQuestion(
        @WebParam(name = "uid", targetNamespace = "")
        int uid,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     * @param uid
     * @param topic
     * @param content
     */
    @WebMethod
    @RequestWrapper(localName = "insertQuestion", targetNamespace = "http://jaxws/", className = "QuestionWS.InsertQuestion")
    @ResponseWrapper(localName = "insertQuestionResponse", targetNamespace = "http://jaxws/", className = "QuestionWS.InsertQuestionResponse")
    public void insertQuestion(
        @WebParam(name = "uid", targetNamespace = "")
        int uid,
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "content", targetNamespace = "")
        String content);

    /**
     * 
     * @param uid
     * @param qid
     * @param token
     */
    @WebMethod
    @RequestWrapper(localName = "deleteQuestion", targetNamespace = "http://jaxws/", className = "QuestionWS.DeleteQuestion")
    @ResponseWrapper(localName = "deleteQuestionResponse", targetNamespace = "http://jaxws/", className = "QuestionWS.DeleteQuestionResponse")
    public void deleteQuestion(
        @WebParam(name = "qid", targetNamespace = "")
        int qid,
        @WebParam(name = "uid", targetNamespace = "")
        int uid,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param qid
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "getQuestionUID", targetNamespace = "")
    @RequestWrapper(localName = "getQuestionUID", targetNamespace = "http://jaxws/", className = "QuestionWS.GetQuestionUID")
    @ResponseWrapper(localName = "getQuestionUIDResponse", targetNamespace = "http://jaxws/", className = "QuestionWS.GetQuestionUIDResponse")
    public int getQuestionUID(
        @WebParam(name = "qid", targetNamespace = "")
        int qid);

    /**
     * 
     * @param uid
     * @param type
     * @param qid
     */
    @WebMethod
    @RequestWrapper(localName = "voteQuestion", targetNamespace = "http://jaxws/", className = "QuestionWS.VoteQuestion")
    @ResponseWrapper(localName = "voteQuestionResponse", targetNamespace = "http://jaxws/", className = "QuestionWS.VoteQuestionResponse")
    public void voteQuestion(
        @WebParam(name = "qid", targetNamespace = "")
        int qid,
        @WebParam(name = "uid", targetNamespace = "")
        int uid,
        @WebParam(name = "type", targetNamespace = "")
        int type);

    /**
     * 
     * @param uid
     * @param topic
     * @param id
     * @param content
     * @param token
     */
    @WebMethod(operationName = "UpdateQuestion")
    @RequestWrapper(localName = "UpdateQuestion", targetNamespace = "http://jaxws/", className = "QuestionWS.UpdateQuestion")
    @ResponseWrapper(localName = "UpdateQuestionResponse", targetNamespace = "http://jaxws/", className = "QuestionWS.UpdateQuestionResponse")
    public void updateQuestion(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "content", targetNamespace = "")
        String content,
        @WebParam(name = "uid", targetNamespace = "")
        int uid,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param q
     * @return
     *     returns java.util.List<QuestionWS.Question>
     */
    @WebMethod
    @WebResult(name = "QuestionQuery", targetNamespace = "")
    @RequestWrapper(localName = "getQuestionByQuery", targetNamespace = "http://jaxws/", className = "QuestionWS.GetQuestionByQuery")
    @ResponseWrapper(localName = "getQuestionByQueryResponse", targetNamespace = "http://jaxws/", className = "QuestionWS.GetQuestionByQueryResponse")
    public List<Question> getQuestionByQuery(
        @WebParam(name = "q", targetNamespace = "")
        String q);

}
