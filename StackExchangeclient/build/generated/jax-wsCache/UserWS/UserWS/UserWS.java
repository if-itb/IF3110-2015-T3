
package UserWS;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.1
 * 
 */
@WebService(name = "UserWS", targetNamespace = "http://jaxws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserWS {


    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "gettingName", targetNamespace = "")
    @RequestWrapper(localName = "getName", targetNamespace = "http://jaxws/", className = "UserWS.GetName")
    @ResponseWrapper(localName = "getNameResponse", targetNamespace = "http://jaxws/", className = "UserWS.GetNameResponse")
    public String getName(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "match", targetNamespace = "")
    @RequestWrapper(localName = "match", targetNamespace = "http://jaxws/", className = "UserWS.Match")
    @ResponseWrapper(localName = "matchResponse", targetNamespace = "http://jaxws/", className = "UserWS.MatchResponse")
    public boolean match(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "getUID", targetNamespace = "")
    @RequestWrapper(localName = "getUID", targetNamespace = "http://jaxws/", className = "UserWS.GetUID")
    @ResponseWrapper(localName = "getUIDResponse", targetNamespace = "http://jaxws/", className = "UserWS.GetUIDResponse")
    public int getUID(
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param email
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "getUIDByEmail", targetNamespace = "")
    @RequestWrapper(localName = "getUIDByEmail", targetNamespace = "http://jaxws/", className = "UserWS.GetUIDByEmail")
    @ResponseWrapper(localName = "getUIDByEmailResponse", targetNamespace = "http://jaxws/", className = "UserWS.GetUIDByEmailResponse")
    public int getUIDByEmail(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "emailDone", targetNamespace = "")
    @RequestWrapper(localName = "emailDone", targetNamespace = "http://jaxws/", className = "UserWS.EmailDone")
    @ResponseWrapper(localName = "emailDoneResponse", targetNamespace = "http://jaxws/", className = "UserWS.EmailDoneResponse")
    public boolean emailDone(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param pass
     * @param name
     * @param email
     */
    @WebMethod
    @RequestWrapper(localName = "createUser", targetNamespace = "http://jaxws/", className = "UserWS.CreateUser")
    @ResponseWrapper(localName = "createUserResponse", targetNamespace = "http://jaxws/", className = "UserWS.CreateUserResponse")
    public void createUser(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "pass", targetNamespace = "")
        String pass);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "createToken", targetNamespace = "")
    @RequestWrapper(localName = "createToken", targetNamespace = "http://jaxws/", className = "UserWS.CreateToken")
    @ResponseWrapper(localName = "createTokenResponse", targetNamespace = "http://jaxws/", className = "UserWS.CreateTokenResponse")
    public String createToken(
        @WebParam(name = "id", targetNamespace = "")
        int id);

}
