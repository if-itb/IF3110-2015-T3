
package QuestionWS;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "QuestionWS", targetNamespace = "http://QuestionOperation/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface QuestionWS {


    /**
     * 
     * @param topic
     * @param id
     * @param content
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "update", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.UpdateResponse")
    @Action(input = "http://QuestionOperation/QuestionWS/updateRequest", output = "http://QuestionOperation/QuestionWS/updateResponse")
    public int update(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "content", targetNamespace = "")
        String content);

    /**
     * 
     * @param qid
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "delete", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.DeleteResponse")
    @Action(input = "http://QuestionOperation/QuestionWS/deleteRequest", output = "http://QuestionOperation/QuestionWS/deleteResponse")
    public int delete(
        @WebParam(name = "qid", targetNamespace = "")
        int qid);

    /**
     * 
     * @param key
     * @return
     *     returns java.util.List<QuestionWS.Question>
     */
    @WebMethod
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "search", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.Search")
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.SearchResponse")
    @Action(input = "http://QuestionOperation/QuestionWS/searchRequest", output = "http://QuestionOperation/QuestionWS/searchResponse")
    public List<Question> search(
        @WebParam(name = "key", targetNamespace = "")
        String key);

    /**
     * 
     * @param id
     * @param value
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "vote", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.Vote")
    @ResponseWrapper(localName = "voteResponse", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.VoteResponse")
    @Action(input = "http://QuestionOperation/QuestionWS/voteRequest", output = "http://QuestionOperation/QuestionWS/voteResponse")
    public int vote(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "value", targetNamespace = "")
        int value);

    /**
     * 
     * @return
     *     returns java.util.List<QuestionWS.Question>
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "getAllQuestion", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.GetAllQuestion")
    @ResponseWrapper(localName = "getAllQuestionResponse", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.GetAllQuestionResponse")
    @Action(input = "http://QuestionOperation/QuestionWS/getAllQuestionRequest", output = "http://QuestionOperation/QuestionWS/getAllQuestionResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://QuestionOperation/QuestionWS/getAllQuestion/Fault/Exception")
    })
    public List<Question> getAllQuestion()
        throws Exception_Exception
    ;

    /**
     * 
     * @param qid
     * @return
     *     returns QuestionWS.Question
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "getQuestionById", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.GetQuestionById")
    @ResponseWrapper(localName = "getQuestionByIdResponse", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.GetQuestionByIdResponse")
    @Action(input = "http://QuestionOperation/QuestionWS/getQuestionByIdRequest", output = "http://QuestionOperation/QuestionWS/getQuestionByIdResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://QuestionOperation/QuestionWS/getQuestionById/Fault/Exception")
    })
    public Question getQuestionById(
        @WebParam(name = "qid", targetNamespace = "")
        int qid)
        throws Exception_Exception
    ;

    /**
     * 
     * @param id
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNumAnswer", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.GetNumAnswer")
    @ResponseWrapper(localName = "getNumAnswerResponse", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.GetNumAnswerResponse")
    @Action(input = "http://QuestionOperation/QuestionWS/getNumAnswerRequest", output = "http://QuestionOperation/QuestionWS/getNumAnswerResponse")
    public int getNumAnswer(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param qid
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVote", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.GetVote")
    @ResponseWrapper(localName = "getVoteResponse", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.GetVoteResponse")
    @Action(input = "http://QuestionOperation/QuestionWS/getVoteRequest", output = "http://QuestionOperation/QuestionWS/getVoteResponse")
    public int getVote(
        @WebParam(name = "qid", targetNamespace = "")
        int qid);

    /**
     * 
     * @param topic
     * @param content
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "post", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.Post")
    @ResponseWrapper(localName = "postResponse", targetNamespace = "http://QuestionOperation/", className = "QuestionWS.PostResponse")
    @Action(input = "http://QuestionOperation/QuestionWS/postRequest", output = "http://QuestionOperation/QuestionWS/postResponse")
    public int post(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "content", targetNamespace = "")
        String content);

}
